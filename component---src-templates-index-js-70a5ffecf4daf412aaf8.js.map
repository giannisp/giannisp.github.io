{"version":3,"sources":["webpack:///./src/templates/index.js"],"names":["IndexTemplate","data","pageContext","currentPage","hasNextPage","hasPrevPage","prevPagePath","nextPagePath","edges","allMarkdownRemark","title","className","map","node","frontmatter","path","date","to","defaultProps"],"mappings":"sJAUMA,EAAgB,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YAE3BC,EAKED,EALFC,YACAC,EAIEF,EAJFE,YACAC,EAGEH,EAHFG,YACAC,EAEEJ,EAFFI,aACAC,EACEL,EADFK,aAGMC,EAAUP,EAAKQ,kBAAfD,MAER,OACE,eAAC,IAAD,WACGL,EAAc,GACb,cAAC,IAAD,CAAQO,MAAK,wBAA0BP,IAGzC,qBAAKQ,UAAU,QAAf,SACGH,EAAMI,KAAI,oBAAGC,KAAQC,YAAeC,EAA1B,EAA0BA,KAAML,EAAhC,EAAgCA,MAAOM,EAAvC,EAAuCA,KAAvC,OACT,sBAAKL,UAAU,OAAf,UACE,oBAAIA,UAAU,aAAd,SACE,cAAC,OAAD,CAAMM,GAAIF,EAAV,SAAiBL,MAGnB,sBAAMC,UAAU,YAAhB,SAA6BK,MALJD,QAU/B,sBAAKJ,UAAU,aAAf,UACGP,GACC,cAAC,OAAD,CAAMa,GAAIV,EAAcI,UAAU,wBAAlC,oBAIAP,GAAe,sBAAMO,UAAU,wBAAhB,mBAChBN,GACC,cAAC,OAAD,CAAMY,GAAIX,EAAcK,UAAU,wBAAlC,oBAIAN,GAAe,sBAAMM,UAAU,wBAAhB,0BA0CzBX,EAAckB,aAAe,CAC3BjB,KAAM,GACNC,YAAa,IAGAF","file":"component---src-templates-index-js-70a5ffecf4daf412aaf8.js","sourcesContent":["/**\n * @file Post template.\n */\n\nimport PropTypes from 'prop-types';\nimport { graphql, Link } from 'gatsby';\nimport { Helmet } from 'react-helmet';\n\nimport Layout from '../components/Layout';\n\nconst IndexTemplate = ({ data, pageContext }) => {\n  const {\n    currentPage,\n    hasNextPage,\n    hasPrevPage,\n    prevPagePath,\n    nextPagePath,\n  } = pageContext;\n\n  const { edges } = data.allMarkdownRemark;\n\n  return (\n    <Layout>\n      {currentPage > 1 && (\n        <Helmet title={`Posts Archive - Page ${currentPage}`} />\n      )}\n\n      <div className=\"posts\">\n        {edges.map(({ node: { frontmatter: { path, title, date } } }) => (\n          <div className=\"post\" key={path}>\n            <h1 className=\"post-title\">\n              <Link to={path}>{title}</Link>\n            </h1>\n\n            <span className=\"post-date\">{date}</span>\n          </div>\n        ))}\n      </div>\n\n      <div className=\"pagination\">\n        {hasNextPage && (\n          <Link to={nextPagePath} className=\"pagination-item older\">\n            Older\n          </Link>\n        )}\n        {!hasNextPage && <span className=\"pagination-item older\">Older</span>}\n        {hasPrevPage && (\n          <Link to={prevPagePath} className=\"pagination-item newer\">\n            Newer\n          </Link>\n        )}\n        {!hasPrevPage && <span className=\"pagination-item newer\">Newer</span>}\n      </div>\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query IndexTemplate($postsLimit: Int!, $postsOffset: Int!) {\n    allMarkdownRemark(\n      limit: $postsLimit\n      skip: $postsOffset\n      filter: { frontmatter: { template: { eq: \"post\" } } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            path\n            title\n            date(formatString: \"DD MMM YYYY\")\n          }\n        }\n      }\n    }\n  }\n`;\n\nIndexTemplate.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      edges: PropTypes.arrayOf(PropTypes.object),\n    }),\n  }),\n  pageContext: PropTypes.shape({\n    currentPage: PropTypes.number,\n    hasNextPage: PropTypes.bool,\n    hasPrevPage: PropTypes.bool,\n    prevPagePath: PropTypes.string,\n    nextPagePath: PropTypes.string,\n  }),\n};\n\nIndexTemplate.defaultProps = {\n  data: {},\n  pageContext: {},\n};\n\nexport default IndexTemplate;\n"],"sourceRoot":""}